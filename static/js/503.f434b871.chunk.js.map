{"version":3,"file":"static/js/503.f434b871.chunk.js","mappings":"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","sources":["js/apiCast.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","js/refs.js"],"sourcesContent":["import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmCast = async id => {\n  const responce = await axios.get(\n    `${refs.BASE_URL}${END_POINT}${id}/credits`,\n    {\n      params: { api_key: refs.API_KEY },\n    }\n  );\n\n  return responce;\n};\nexport default getFilmCast;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const PhotoWrap = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    display: block;\n  }\n`;\nexport const ActorInfoWrap = styled.div`\n  width: 150px;\n`;\n","import getFilmCast from 'js/apiCast';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorInfoWrap, CastList, PhotoWrap } from './Cast.styled';\nimport defaultPhoto from '../../img/bart.jpg';\nimport { Loader } from 'components/Loader/loader';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\n\nconst Cast = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const moviesId = useParams();\n  const id = moviesId.moviesId;\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { cast },\n        } = await getFilmCast(id);\n        setCast(cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getCast(id);\n  }, [id]);\n\n  return (\n    <CastList>\n      {loader && <Loader />}\n      {error && <ErrMessage />}\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <li key={id}>\n            <PhotoWrap>\n              <img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : defaultPhoto\n                }\n                alt=\"actor\"\n                width={150}\n              />\n            </PhotoWrap>\n            <ActorInfoWrap>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </ActorInfoWrap>\n          </li>\n        );\n      })}\n      {cast.length < 1 && <p>Without information</p>}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\n\nconst ErrMessage = () => {\n  return <ErrorText>Error, Please reload this page!</ErrorText>;\n};\n\nexport default ErrMessage;\n","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { Hourglass } from 'react-loader-spinner';\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <LoadMessage>Loading...</LoadMessage>\n      <Hourglass\n        visible={true}\n        height=\"50\"\n        width=\"50\"\n        ariaLabel=\"hourglass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        colors={['#306cce', '#72a1ed']}\n      />\n    </LoaderWrap>\n  );\n};\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/',\n};\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["getFilmCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","responce","_context","prev","next","axios","concat","refs","params","api_key","sent","abrupt","stop","_x","apply","arguments","CastList","styled","_templateObject","_taggedTemplateLiteral","PhotoWrap","_templateObject2","ActorInfoWrap","_templateObject3","_useState","useState","_useState2","_slicedToArray","loader","setLoader","_useState3","_useState4","error","setError","_useState5","_useState6","cast","setCast","useParams","moviesId","useEffect","getCast","_yield$getFilmCast","_cast","data","t0","finish","_jsxs","children","_jsx","Loader","ErrMessage","map","_ref2","profile_path","name","character","src","defaultPhoto","alt","width","length","ErrorText","LoaderWrap","LoadMessage","Hourglass","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}